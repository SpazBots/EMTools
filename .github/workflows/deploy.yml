name: Deploy new version

on:
  workflow_dispatch:
    inputs:
      bundle_version:
        description: 'Bundle verison'
        required: true

jobs:
  deploy:
    runs-on: macos-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set environment variables from project settings
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          exec .github/scripts/set-env-from-xcodeproj.sh

      - name: Update iOS version Info.plist
        uses: damienaicheh/update-ios-version-info-plist-action@v1.1.0
        with:
          info-plist-path: "./EMTools/Info.plist"
          bundle-short-version-string: "1.0"
          bundle-version: ${{ inputs.bundle_version }}
          print-file: true

      - name: Import signing certificate
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          exec .github/scripts/import-certificate.sh

      - name: Import provisioning profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
        run: |
          exec .github/scripts/import-profile.sh

      - name: Build app
        run: |
          fastlane run build_app

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build.log
          path: ~/Library/Logs/gym/*.log

      - name: Upload app to App Store Connect
        env:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: |
          xcrun altool --upload-app -t ios -f "$PRODUCT_NAME.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"

      - name: Commit new version
        run: git commit -am "Bump to build version ${{ inputs.bundle_version }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
